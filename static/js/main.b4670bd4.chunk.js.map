{"version":3,"sources":["Assets/Img/loader.svg","config.js","Utils/apollo.js","Components/Header/HeaderContainer.js","Components/Header/HeaderWrapper.js","Components/Header/HeaderTitle.js","Components/Header/HeaderSubtitle.js","Components/Header/Header.js","Components/Common/Loader.js","Components/Blog/BlogContainer.js","Components/Blog/Card/CardContainer.js","Components/Blog/Card/CardHeader.js","Components/Blog/Card/CardCategory.js","Components/Blog/Card/CardTitle.js","Components/Blog/Card/CardDescription.js","Components/Blog/Card/CardReadingTime.js","Components/Blog/Card/Card.js","Containers/Blog.js","Components/Post/ReactionCard/ReactionCardContainer.js","Components/Post/ReactionCard/ReactionCardText.js","Components/Post/ReactionCard/ReactionCardBorder.js","Components/Post/ReactionCard/ReactionCardLink.js","Components/Post/ReactionCard/ReactionCard.js","Components/Post/PostContainer.js","Components/Post/PostTitle.js","Components/Post/PostDate.js","Components/Post/PostDateLink.js","Components/Post/PostReaction.js","Components/Post/BackButton.js","Components/Post/Author/AuthorDetails.js","Components/Post/Author/AuthorAvatar.js","Components/Post/Author/AuthorName.js","Containers/BlogPost.js","Router.js","Application.js","serviceWorker.js","index.js"],"names":["module","exports","config","backgroundColor","titleColor","subtitleColor","client","ApolloClient","uri","request","operation","setContext","headers","authorization","atob","HeaderContainer","styled","div","HeaderWrapper","HeaderTitle","h1","HeaderSubtitle","Header","LoaderContainer","span","Loader","src","loader","alt","BlogContainer","CardContainer","CardHeader","StyledCategory","CardCategory","value","key","id","style","color","name","CardTitle","h2","CardDescription","p","ReadingTime","CardReadingTime","time","Card","blog","useState","labels","setLabels","history","useHistory","useEffect","nodes","filter","map","i","readingTime","body","minutes","onClick","title","number","push","bodyText","GET_POSTS","gql","Blog","posts","setPosts","useQuery","loading","error","data","console","repository","issues","v","ReactionCardContainer","ReactionCardText","ReactionCardBorder","ReactionCardLink","a","ReactionCard","link","href","target","rel","role","aria-label","PostContainer","PostTitle","PostDate","PostDateLink","PostReaction","BackButton","button","AuthorDetails","AuthorAvatar","img","AuthorName","BlogHome","issueNumber","parseInt","window","location","split","pop","post","setPost","addReaction","setAddReaction","reactionCounter","setReactionCounter","getEmojiStringByName","useCallback","emojiName","setReactionFun","reactions","reactions_array","forEach","element","obj","by","user","login","emoji","content","issue","go","back","author","avatarUrl","moment","updatedAt","format","url","options","overrides","component","children","props","className","jsx","pre","language","docco","counters","onSelect","log","githubCounterEmojiSelect","onAdd","createBrowserHistory","require","Router","exact","path","Application","Helmet","charSet","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b4670bd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.65f8709d.svg\";","export const config = {\n  // Your Github Converted Token To Know How To Get Your Token Look at Readme.md\n  githubConvertedToken: \"ODM5ODY0MWRmYzUxOTcyZTdhMWMxM2NmZGIwNWU4Yzc3NmI5NTg0ZQ==\",\n\n  // Your Github UserName\n  githubUserName: \"saadpasta\",\n\n  // Your Github Repo Name Where You Have your issues as Blog\n  githubRepo: \"react-blog-github\",\n\n  // Your Personal Blog Title\n  title : \"Saad Pasta\" ,\n\n  // Your Personal Blog Subtitle\n  subtitle : \"Front End Developer Blog\",\n\n  // Header customization\n  header: {\n    backgroundColor: '#f1f6f8', // can be a CSS gradient\n    titleColor: '#ff5252',\n    subtitleColor: '#37474f',\n  },\n};\n","import ApolloClient from \"apollo-boost\";\n\nimport { config } from '../config'\n\nexport const client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${atob(config.githubConvertedToken)}`\n      }\n    });\n  }\n});","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { backgroundColor } = config.header\n\nexport const HeaderContainer = styled.div`\n  padding: 5em;\n  text-align: center;\n  background: ${backgroundColor};\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n\n  @media only screen and (max-width: 768px) {\n    padding: 3em;\n  }\n`","import styled from 'styled-components'\n\nexport const HeaderWrapper = styled.div`\n  margin: 0 auto;\n  padding: 0 1em;\n  max-width: 1140px;\n  text-align: center;\n`","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { titleColor } = config.header\n\nexport const HeaderTitle = styled.h1`\n  font-weight: 700;\n  line-height: 1.15;\n  margin: 1.25rem 0;\n  font-size: 4.5em;\n  text-align: center;\n  color: ${titleColor};\n\n  @media only screen and (max-width: 768px) {\n    font-size: 3em;\n  }\n`","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { subtitleColor } = config.header\n\nexport const HeaderSubtitle = styled.h1`\n  font-weight: 400;\n  color: ${subtitleColor};\n  line-height: 1.15;\n  margin: 1.25rem 0;\n  font-size: 2.5em;\n  text-align: center;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 2em;\n  }\n`","import React from 'react'\n\nimport {\n    HeaderContainer,\n    HeaderWrapper,\n    HeaderTitle,\n    HeaderSubtitle\n} from './'\nimport { config } from \"../../config\"\n\nexport const Header = () => {\n    return (\n        <HeaderContainer>\n            <HeaderWrapper>\n                <HeaderTitle>{config.title}</HeaderTitle>\n                <HeaderSubtitle>{config.subtitle}</HeaderSubtitle>\n            </HeaderWrapper>\n        </HeaderContainer>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport loader from '../../Assets/Img/loader.svg'\n\nconst LoaderContainer = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    height: 128px;\n  }\n`\n\nexport const Loader = () => (\n  <LoaderContainer>\n    <img src={loader} alt=\"Loading...\" />\n  </LoaderContainer>\n)","import styled from 'styled-components'\n\nexport const BlogContainer = styled.div`\n  margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n`","import styled from 'styled-components'\n\nexport const CardContainer = styled.div`\n  cursor: pointer;\n  margin-bottom: 6rem;\n`","import styled from 'styled-components'\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCategory = styled.div`\n  display: inline-block;\n  background: #009bbb;\n  border-radius: 3px;\n  padding: 3px 15px;\n  font-size: 12px;\n  text-transform: uppercase;\n  color: #fff;\n  font-weight: 300;\n  line-height: 28px;\n  font-family: \"Quicksand\";\n  margin-right: 10px;\n`\n\nexport const CardCategory = ({ value }) => (\n  <StyledCategory\n    key={value.id}\n    style={{ backgroundColor: `#${value.color}` }}>\n    {value.name}\n  </StyledCategory>\n)","import styled from 'styled-components'\n\nexport const CardTitle = styled.h2`\n  font-size: 34px;\n  transition-duration: 0.15s, 0.15s, 0.15s;\n  transition-timing-function: ease-in, ease-in, ease-in;\n  transition-delay: 0s, 0s, 0s;\n\n  :hover {\n    opacity: 0.7;\n  }\n`","import styled from 'styled-components'\n\nexport const CardDescription = styled.p`\n  font-size: 18px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst ReadingTime = styled.p`\n  color: #b5b5b5;\n  font-size: 15px\n`\n\nexport const CardReadingTime = ({ time }) => (\n  <ReadingTime>{time} Min Read</ReadingTime>\n)","import React, { useState, useEffect } from \"react\";\nimport readingTime from \"reading-time\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  CardContainer,\n  CardHeader,\n  CardCategory,\n  CardReadingTime,\n  CardTitle,\n  CardDescription,\n} from './'\n\nexport const Card = ({ blog }) => {\n  const [labels, setLabels] = useState([]);\n  const history = useHistory();\n\n  const openBlog = (title, number) => {\n    history.push(`/blog/${title}/${number}`);\n  }\n\n  useEffect(() => {\n    const labels = blog.labels.nodes.filter((value) => {\n      return value.name !== \"blog\";\n    });\n\n    setLabels(labels);\n  }, [blog.labels.nodes]);\n\n  return (\n    <CardContainer>\n      <CardHeader>\n        <>\n        {labels.map((value, i) => {\n          return (\n            <CardCategory value={value} key={i} />\n          );\n        })}\n        </>\n        <CardReadingTime time={readingTime(blog.body).minutes} />\n      </CardHeader>\n      <div>\n        <CardTitle onClick={() => openBlog(blog.title, blog.number)}>{blog.title}</CardTitle>\n        <CardDescription>\n          {blog.bodyText}\n        </CardDescription>\n      </div>\n    </CardContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { config } from \"../config\";\nimport { Header } from \"../Components/Header\";\nimport { Loader } from '../Components/Common'\nimport { BlogContainer } from '../Components/Blog'\nimport { Card } from '../Components/Blog/Card'\n\nconst GET_POSTS = gql`\n{\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n    issues(first: 100, states: OPEN, filterBy: { labels: \"blog\" }) {\n      nodes {\n        title\n        body\n        bodyHTML\n        bodyText\n        number\n        labels(first: 100) {\n          nodes {\n            color\n            name\n            id\n          }\n        }\n        author {\n          url\n          avatarUrl\n          login\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n}\n`\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        console.error(error)\n      }\n\n      if (data) {\n        setPosts(data?.repository?.issues?.nodes)\n      }\n    }\n  }, [loading, error, data]);\n\n  return (\n    <>\n      <Header />\n      <BlogContainer>\n        {\n          loading\n          ? <Loader />\n          : posts.map((v, i) => {\n              return <Card blog={v} key={i} />;\n            })\n        }\n      </BlogContainer>\n    </>\n  );\n}\n\nexport default Blog;\n","import styled from 'styled-components'\n\nexport const ReactionCardContainer = styled.div`\n  padding-top: 5px;\n  background-color: rgb(255, 255, 255);\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 12px;\n  display: inline-block;\n`","import styled from 'styled-components'\n\nexport const ReactionCardText = styled.p`\n  font-size: 14px;\n  line-height: 1.5;\n  color: rgb(118, 118, 118);\n  margin: 6px 12px;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica;\n`","import styled from 'styled-components'\n\nexport const ReactionCardBorder = styled.div`\n  height: 1px;\n  margin: 8px 1px 0px;\n  background-color: rgb(229, 229, 229);\n`","import styled from 'styled-components'\n\nexport const ReactionCardLink = styled.a`\n  display: block;\n  text-align: center;\n  margin: 0;\n  padding: 5px;\n  line-height: 1.5;\n  font-size: 14px;\n  text-decoration: none;\n  transition-duration: 0.15s, 0.15s, 0.15s;\n  transition-timing-function: ease-in, ease-in, ease-in;\n  transition-delay: 0s, 0s, 0s;\n  color: rgba(0, 0, 0, 0.54);\n\n  :hover {\n    color: black;\n  }\n`","import React from \"react\";\n\nimport {\n  ReactionCardContainer,\n  ReactionCardText,\n  ReactionCardBorder,\n  ReactionCardLink,\n} from './'\n\nexport const ReactionCard = ({ link }) => {\n  return (\n    <ReactionCardContainer>\n      <ReactionCardText>Give your reaction on Github</ReactionCardText>\n      <ReactionCardBorder />\n      <ReactionCardLink href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n        Github link <span role=\"img\" aria-label=\"lightning bolt\">⚡️</span>\n      </ReactionCardLink>\n    </ReactionCardContainer>\n  );\n}\n","import styled from 'styled-components'\n\nexport const PostContainer = styled.div`\n  margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n  position: relative;\n`","import styled from 'styled-components'\n\nexport const PostTitle = styled.h1`\n  @media only screen and (max-width: 768px) {\n    font-size: 30px;\n  }\n`","import styled from 'styled-components'\n\nexport const PostDate = styled.p`\n  color: rgba(0, 0, 0, 0.54);\n  font-weight: 400;\n  font-size: 14px;\n  margin-bottom: 0px;\n  margin-top: 0px;\n`","import styled from 'styled-components'\n\nexport const PostDateLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  transition-duration: 0.15s, 0.15s, 0.15s;\n  transition-timing-function: ease-in, ease-in, ease-in;\n  transition-delay: 0s, 0s, 0s;\n  color: rgba(0, 0, 0, 0.54);\n\n  :hover {\n    color: rgba(0, 0, 0, 0.84);\n  }\n`","import styled from 'styled-components'\n\nexport const PostReaction = styled.span`\n  position: absolute;\n  bottom: 60px;\n  animation-name: scale-in;\n  animation-duration: 0.15s;\n  animation-timing-function: cubic-bezier(0.2, 0, 0.13, 1.5);\n`","import styled from \"styled-components\";\n\nexport const BackButton = styled.button`\n  outline: none;\n  border: 1px solid;\n  font-size: 22px;\n  font-family: \"Shadows Into Light\", serif;\n  border-radius: 5px;\n  padding: 0px 20px 0 30px;\n  cursor: pointer;\n  position: relative;\n\n  :hover {\n    background-color: black;\n    color: white;\n  }\n\n  :before {\n    content: \"\\\\27A4\";\n    position: absolute;\n    transform: translateY(-50%) rotate(180deg);\n    left: 10px;\n    font-size: 16px;\n    top: 54%;\n  }\n`;\n","import styled from 'styled-components'\n\nexport const AuthorDetails = styled.div`\n  display: flex;\n  align-items: center;\n`","import styled from 'styled-components'\n\nexport const AuthorAvatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 40px;\n  margin: 10px;\n  margin-left: 0px;\n`","import styled from 'styled-components'\n\nexport const AuthorName = styled.p`\n  margin-bottom: 0px;\n  margin-top: 0px;\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.84);\n`","import React, { useState, useEffect, useCallback } from \"react\";\nimport moment from \"moment\";\nimport Markdown from \"markdown-to-jsx\";\nimport readingTime from \"reading-time\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { GithubCounter } from \"react-reactions\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { config } from \"../config\";\nimport { ReactionCard } from \"../Components/Post/ReactionCard\";\nimport { Loader } from \"../Components/Common\";\nimport { PostContainer, PostTitle, PostDate, PostDateLink, PostReaction, BackButton } from \"../Components/Post\";\nimport { AuthorDetails, AuthorAvatar, AuthorName } from \"../Components/Post/Author\";\n\nexport default function BlogHome() {\n  const issueNumber = parseInt(window.location.href.split(\"/\").pop());\n  const GET_POSTS = gql`\n  {\n    repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n      issue(number: ${issueNumber}) {\n        title\n        body\n        bodyHTML\n        url\n        bodyText\n        number\n        bodyHTML\n        author {\n          url\n          avatarUrl\n          login\n        }\n        reactions(first:100){\n          nodes{\n            content\n            user{\n              id\n              login\n            }\n          }\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n  `;\n  const [post, setPost] = useState([]);\n  const [addReaction, setAddReaction] = useState(false);\n  const [reactionCounter, setReactionCounter] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n\n  const getEmojiStringByName = useCallback(emojiName => {\n    switch (emojiName) {\n      case \"THUMBS_UP\":\n        return \"👍\";\n\n      case \"THUMBS_DOWN\":\n        return \"👎\";\n\n      case \"LAUGH\":\n        return \"😄\";\n\n      case \"HOORAY\":\n        return \"🎉\";\n\n      case \"CONFUSED\":\n        return \"😕\";\n\n      case \"HEART\":\n        return \"❤️\";\n\n      case \"ROCKET\":\n        return \"🚀\";\n\n      case \"EYES\":\n        return \"👀\";\n\n      default:\n        return \"\";\n    }\n  }, []);\n\n  const setReactionFun = useCallback(\n    reactions => {\n      // {\n      //   emoji: \"👍\", // String emoji reaction\n      //   by: \"case\" // String of persons name\n      // }\n\n      let reactions_array = [];\n      reactions.forEach(element => {\n        let obj = {\n          by: element.user.login,\n          emoji: getEmojiStringByName(element.content)\n        };\n        reactions_array.push(obj);\n      });\n\n      setReactionCounter(reactions_array);\n    },\n    [getEmojiStringByName]\n  );\n\n  const HyperLink = ({ children, ...props }) => (\n    <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"blog-post-anchor\">\n      {children}\n      <style jsx=\"true\">\n        {`\n          a {\n            color: #484848;\n            font-weight: 400;\n          }\n        `}\n      </style>\n    </a>\n  );\n\n  const CodeBlock = ({ children }) => (\n    <SyntaxHighlighter language=\"javascript\" style={docco}>\n      {children.props.children}\n    </SyntaxHighlighter>\n  );\n\n  const githubCounterEmojiSelect = emoji => {\n    console.log(emoji);\n  };\n\n  const githubCounterAddReaction = () => {\n    setAddReaction(!addReaction);\n  };\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        console.error(error);\n      }\n\n      if (data) {\n        const issues = data.repository.issue;\n        setPost(issues);\n        setReactionFun(issues.reactions.nodes);\n      }\n    }\n  }, [loading, error, data, setReactionFun]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const onBackClick = () => {\n    // ifthe previous page does not exist in the history list. this method to load the previous (or next) URL in the history list.\n    window.history.go();\n    // The back() method loads the previous URL in the history list.\n    window.history.back();\n  };\n\n  return (\n    <>\n      {post.title && (\n        <PostContainer>\n          <BackButton onClick={() => onBackClick()}>Back</BackButton>\n\n          <PostTitle>{post.title}</PostTitle>\n          <div>\n            <AuthorDetails>\n              <AuthorAvatar src={post.author.avatarUrl} alt={post.author.login} />\n              <div>\n                <AuthorName>{post.author.login}</AuthorName>\n                <PostDate>\n                  {moment(post.updatedAt).format(\"DD MMM YYYY\")} .{readingTime(post.body).minutes} Min Read .\n                  <PostDateLink href={post.url} target=\"_black\">\n                    View On Github\n                  </PostDateLink>\n                </PostDate>\n              </div>\n            </AuthorDetails>\n          </div>\n          <Markdown\n            options={{\n              overrides: {\n                a: {\n                  component: HyperLink\n                },\n                pre: {\n                  component: CodeBlock\n                }\n              }\n            }}\n          >\n            {post.body}\n          </Markdown>\n          {addReaction && (\n            <PostReaction>\n              {/* <GithubSelector onSelect={emoji => onEmojiSelect(emoji)} /> */}\n              <ReactionCard link={post.url} />\n            </PostReaction>\n          )}\n          <GithubCounter counters={reactionCounter} onSelect={emoji => githubCounterEmojiSelect(emoji)} onAdd={() => githubCounterAddReaction()} />\n        </PostContainer>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport Blog from \"./Containers/Blog\"\nimport BlogHome from \"./Containers/BlogPost\";\n\nvar createBrowserHistory = require(\"history\").createBrowserHistory;\nconst history = createBrowserHistory();\n\nconst Router = () => {\n  return (\n    <HashRouter history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={Blog} />\n        <Route exact path=\"/blog/:title/:issueNumber\" component={BlogHome}/>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react'\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Helmet } from \"react-helmet\";\n\nimport { config } from './config'\nimport { client } from './Utils/apollo';\nimport Router from './Router';\n\nconst Application = () => (\n  <>\n    <Helmet>\n        <title>{config.title}</title>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"description\" content={config.subtitle} />\n        <meta name=\"theme-color\" content={config.header.backgroundColor} />\n    </Helmet>\n    <ApolloProvider client={client}>\n      <Router />\n    </ApolloProvider>\n  </>\n);\n\nexport default Application;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Application from './Application';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Application />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif(process.env.NODE_ENV === 'production') serviceWorker.register();\nelse serviceWorker.unregister();\n\n"],"sourceRoot":""}